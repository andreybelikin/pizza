<?php

namespace Feature\Controller\Order;

use Illuminate\Support\Facades\DB;
use Tests\TestCase;

class OrderIndexTest extends TestCase
{
    private const CONTROLLER_ROUTE = 'api/users/{userId}/orders';

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testGetUserOrdersByOwnerSuccess(): void
    {
        $user = $this->getUser();
        $expectedOrders = $this->getUserOrders($user);
        $response = $this->getJson(
            str_replace('{userId}', $user->getKey(), self::CONTROLLER_ROUTE),
            ['authorization' => 'Bearer ' . $this->getUserAccessToken($user)]
        );

        $response->assertOk();
        $response->assertJsonFragment(json_decode($expectedOrders, true));
    }

    public function testGetUserOrdersWithInvalidTokenShouldFail(): void
    {
        $response = $this->getJson(
            str_replace('{userId}', $this->getUser()->getKey(), self::CONTROLLER_ROUTE),
            ['authorization' => 'Bearer ' . $this->getInvalidToken()]
        );

        $response->assertUnauthorized();
    }

    public function testGetUserOrdersByAnotherUserShouldFail(): void
    {
        $user = $this->getUser();
        $anotherUser = $this->getAnotherUser();
        $response = $this->getJson(
            str_replace('{userId}', $anotherUser->getKey(), self::CONTROLLER_ROUTE),
            ['authorization' => 'Bearer ' . $this->getUserAccessToken($user)]
        );

        $response->assertForbidden();
    }
}
